#!/bin/bash

Help(){

    cat <<-EOF

Usage: ${0##*/} COMMAND

  Commands:
    init        build all containers from origin image
    start       start all containers
    stop        stop all containers
    restart     restart all container
    status      list all container
EOF
    exit 0;

}

sshkey(){
    set container="go" "php"
    for con in ${container};
    do
        docker exec -it ${con} /bin/bash -c "sh /root/ssh.sh"
    done
}

if [ -z "$*" ]; then
    Help
fi

BIN_DIR=`dirname $0`
PRO_DIR=`dirname ${BIN_DIR}`

CURRENT_DIR=`pwd`
cd ${PRO_DIR}

if [[ ! -f "${PRO_DIR}/.env" ]] || [[ "$2" == "1" ]]; then
  cp ${PRO_DIR}/.env.example ${PRO_DIR}/.env
fi

## 镜像下载加速
## curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://f1361db2.m.daocloud.io
## 加载配置项
source ${PRO_DIR}/.env

##redis log 需要单独赋予权限
chmod 777 ${REDIS_LOGS}/redis.log

### 容器相关操作
if [[ $1 == "s" ]];then
  ## 登录到容器
  docker exec -it $2 /bin/bash
  exit
elif [[ $1 == "log" ]]; then
  ## 打印容器最近50条日志
  docker logs --tail 50 --follow --timestamps $2
  exit
fi

## 服务相关
case "$1" in
    init)
            # 启动容器服务
            printf "\033[32;49;1m 开始构建容器 \033[39;49;0m \n"
            if [ `uname -s | grep -i nt` ]; then
                docker-compose up -d --force-recreate
            else
                sudo -b docker-compose up -d --force-recreate
            fi

            sshkey
        ;;
    start)
            sudo docker-compose start
        ;;
    stop)
            sudo docker-compose stop
        ;;
    restart)
            sudo docker-compose restart
        ;;
    remove)
        sudo docker-compose down
        ;;
    status)
            docker-compose ps
        ;;
    rebuild)
        # 启动容器服务
        printf "\033[33;49;1m 开始构建容器 \033[39;49;0m \n"
        if [ `uname -s | grep -i nt` ]; then
            docker-compose -f docker-compose-build.yml up -d --build
        else
            sudo -b docker-compose -f docker-compose-build.yml up -d --build
        fi

        # 结尾清理中间镜像
        middle_images_num=`docker images -f "dangling=true" -q | awk '{print $1":"$2}' | wc -l`
        if [ $middle_images_num -ne 0 ]; then
            docker rmi $(docker images -f "dangling=true" -q)
            printf "\033[32;49;1m 中间镜像清理完成 \033[39;49;0m \n"
        fi
        ;;

    clearAll)
        #清除所有镜像 和 容器
        docker ps -a | awk '{print $1}' | xargs docker container rm;
         docker images -a | awk '{print $3}' | xargs docker rmi --force;
        ;;

    *)
            Help
        ;;
esac

cd ${CURRENT_DIR}
